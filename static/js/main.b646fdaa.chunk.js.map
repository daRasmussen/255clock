{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","decrement","break","session","increment","length","start_stop","minutes","seconds","time","bind","reset","up_and_down","fullTime","this","match","countDownHolder","setInterval","clearInterval","e","target","innerText","innerHTML","countDown","removeCount","setState","id","re","type","action","second","Object","keys","filter","key","parseInt","numberOfBreaks","numberOfSessions","className","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b646fdaa.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n\n  static countDownHolder = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      decrement: {\n        break: -1,\n        session: -1,\n      },\n      increment: {\n        break: 1,\n        session: 1,\n      },\n      length: {\n        break: 5,\n        session: 25,\n      },\n      start_stop: false,\n      minutes: 0,\n      seconds: 0,\n      time: '00:00',\n    }\n    this.start_stop = this.start_stop.bind(this);\n    this.reset = this.reset.bind(this);\n    this.up_and_down = this.up_and_down.bind(this);\n  }\n\n  countDown() {\n    let { state : { time }} = this;\n    const re = /(\\d+):(\\d+)/i\n    const fullTime = time.match(re)\n    let minutes = fullTime[1]\n    let seconds = fullTime[2]\n    App.countDownHolder = setInterval(function() {\n\n\n    }, 1000);\n  }\n\n  removeCount() {\n    clearInterval(App.countDownHolder)\n  }\n\n  start_stop(e) {\n    let { target: { innerText }} = e;\n    if(innerText === 'Start') {\n      e.target.innerHTML = 'Pause'\n      this.countDown();\n    } else {\n      // stop clock\n      e.target.innerHTML = 'Start'\n      this.removeCount();\n    }\n  }\n\n  reset() {\n    const { state: { length: { session }}} = this;\n    this.setState({\n      time: session + ':00',\n    });\n  }\n\n  up_and_down(e) {\n    const { target: { id }} = e;\n    const re = /(break|session)-(decrement|increment)/;\n    const type = id.match(re)[1];\n    const action = id.match(re)[2]\n    const length = {};\n    const second = Object.keys(this.state.length).filter(key => key !== type)[0];\n    length[second] = this.state.length[second];\n    length[type] = parseInt(this.state.length[type], 10) + parseInt(this.state[action][type], 10)\n\n    this.setState({\n       length\n    })\n  }\n\n  render() {\n    let numberOfBreaks = this.state.length['break'];\n    let numberOfSessions = this.state.length['session'];\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>25 + 5 Clock</h1>\n            <div id=\"break-label\">\n              Break Length\n            </div>\n            <div id=\"break-length\">{numberOfBreaks}</div>\n            <div className=\"Knappar\">\n              <button id=\"break-decrement\" onClick={this.up_and_down}> Decrement </button>\n              <button id=\"break-increment\" onClick={this.up_and_down}> Increment </button>\n            </div>\n            <div id=\"session-label\">\n              Session Length\n            </div>\n            <div id=\"session-length\">{numberOfSessions}</div>\n            <div className=\"Knappar\">\n              <button id=\"session-decrement\" onClick={this.up_and_down}> Decrement  </button>\n              <button id=\"session-increment\" onClick={this.up_and_down}> Increment </button>\n            </div>\n            <div id=\"timer-label\">Session</div>\n            <div id=\"time-left\">{this.state.time}</div>\n            <div className=\"Knappar\">\n              <button id=\"start_stop\" onClick={this.start_stop}> Start </button>\n              <button id=\"reset\" onClick={this.reset} > Rest </button>\n            </div>\n            <code>drGeo</code>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport FCCTest from 'react-fcctest'\n\nReactDOM.render(\n  <React.StrictMode >\n      <FCCTest />\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}