{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","props","state","decrement","break","session","increment","length","start_stop","mode","active","inActive","time","seconds","minutes","bind","reset","up_and_down","countDown","toggleActive","fullTime","this","match","parseInt","setState","filter","item","getTime","countDownHolder","setInterval","console","log","update","positive","clearInterval","e","target","innerText","innerHTML","removeCount","validate","value","constraints","key","Object","keys","some","o","left","trim","mid","operator","right","eval","id","re","type","action","second","numberOfBreaks","numberOfSessions","className","onClick","substring","toUpperCase","pause","React","Component"],"mappings":"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","file":"static/js/main.637aa29b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport FCCTest from 'react-fcctest'\n\nReactDOM.render(\n  <React.StrictMode >\n      <FCCTest />\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n\n  static countDownHolder = null;\n  static constraints = {\n    length:[\n      {\n        operator: '<=',\n        right: '0'\n      },\n      {\n        operator: '>',\n        right: '60'\n      }\n    ]\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      decrement: {\n        break: -1,\n        session: -1,\n      },\n      increment: {\n        break: 1,\n        session: 1,\n      },\n      length: {\n        break: 2, // 5\n        session: 1, // 25\n      },\n      start_stop: false,\n      mode: [\"session\", \"break\"],\n      active: \"session\",\n      inActive: \"break\",\n      time: '00:00', // 25\n      seconds: 0,\n      minutes: 0\n    }\n    this.start_stop = this.start_stop.bind(this);\n    this.reset = this.reset.bind(this);\n    this.up_and_down = this.up_and_down.bind(this);\n    this.countDown = this.countDown.bind(this);\n    this.toggleActive = this.toggleActive.bind(this);\n  }\n\n  getTime() {\n    let { state : { time }} = this;\n    const re = /(\\d+):(\\d+)/i\n    const fullTime = time.match(re)\n    let minutes = parseInt(fullTime[1])\n    let seconds = parseInt(fullTime[2])\n\n    return {\n      minutes,\n      seconds\n    }\n  }\n\n  toggleActive() {\n    const { state: { mode, active, inActive }} = this\n    this.setState({\n      active: mode.filter((item) => item === inActive)[0],\n      inActive: mode.filter((item) => item === active)[0],\n    });\n  }\n\n  countDown() {\n    let { minutes, seconds } = this.getTime();\n    const { state: { length, active }} = this;\n    if(length[active] !== minutes) {\n      minutes = length[active]\n    }\n    seconds = 0;\n    App.countDownHolder = setInterval(function() {\n      console.log(minutes)\n        if(seconds === 0 || seconds === -60) {\n          seconds = 0;\n          minutes -= 1;\n          if (minutes <= 0) {\n            minutes = 0;\n          }\n        }\n        seconds--;\n        update(minutes, seconds);\n    }, 100 );\n\n    const update = (minutes, seconds) => {\n      const positive = 60 + seconds;\n      if(positive === 0 || positive === 60) {\n          seconds = '00';\n      } else if (positive > 0 && positive < 10) {\n         seconds = '0' + positive;\n      } else if (positive > 9 && positive < 60) {\n        seconds = positive;\n      }\n\n      if(minutes < 10) {\n        minutes = '0' + minutes;\n      }\n\n      if(minutes === '00' && seconds === '00') {\n        this.toggleActive();\n      }\n\n      this.setState({\n        time: minutes + ':' + seconds\n      })\n    }\n\n  }\n\n  removeCount() {\n    clearInterval(App.countDownHolder)\n  }\n\n  start_stop(e) {\n    let { target: { innerText }} = e;\n    if(innerText === 'Start') {\n      e.target.innerHTML = 'Stop'\n      this.countDown();\n    } else {\n      e.target.innerHTML = 'Start'\n      this.removeCount();\n    }\n  }\n\n  reset() {\n    this.removeCount()\n    this.setState({\n      length: {\n        break: 5,\n        session: 25\n      },\n      time: 25 + ':00',\n    });\n  }\n\n  validate(value, constraints) {\n    const key = Object.keys(value)[0];\n    const target = value[key];\n    return constraints.some(\n        function (o) {\n          let left = `${'left' in o && key !== 'left' ? o.left : key === 'left' ? target : 'left'}`.trim()\n          let mid =   `${o.operator && key !== 'operator' ? o.operator : key === 'operator' ? target : ''}`.trim()\n          let right = `${'right' in o && key !== 'right'? o.right : key === 'right' ? target : 'right'}`.trim()\n          // eslint-disable-next-line no-eval\n          return eval(left + mid + right)\n        }\n    )\n  }\n\n  up_and_down(e) {\n    const { target: { id }} = e;\n    const re = /(break|session)-(decrement|increment)/;\n    const type = id.match(re)[1];\n    const action = id.match(re)[2]\n\n    const length = {};\n    const second = Object.keys(this.state.length).filter(key => key !== type)[0];\n    length[second] = this.state.length[second];\n    const value = parseInt(this.state.length[type], 10) + parseInt(this.state[action][type], 10);\n    length[type] = value;\n\n    const inValid = this.validate({left: value}, App.constraints['length'])\n    if(inValid) {\n      length[type] = 1;\n    }\n\n    const time = this.state.active === 'Session' ? `${length['session']}:00` : `${length['break']}:00`\n\n    this.setState({\n       length,\n        time\n    });\n  }\n\n  render() {\n    let numberOfBreaks = this.state.length['break'];\n    let numberOfSessions = this.state.length['session'];\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>25 + 5 Clock</h1>\n            <div id=\"break-label\">\n              Break Length\n            </div>\n            <div id=\"break-length\">{numberOfBreaks}</div>\n            <div className=\"Knappar\">\n              <button id=\"break-decrement\" onClick={this.up_and_down}> Decrement </button>\n              <button id=\"break-increment\" onClick={this.up_and_down}> Increment </button>\n            </div>\n            <div id=\"session-label\">\n              Session Length\n            </div>\n            <div id=\"session-length\">{numberOfSessions}</div>\n            <div className=\"Knappar\">\n              <button id=\"session-decrement\" onClick={this.up_and_down}> Decrement  </button>\n              <button id=\"session-increment\" onClick={this.up_and_down}> Increment </button>\n            </div>\n            <div id=\"timer-label\">{\n              this.state.active.substring(0,1).toUpperCase()\n              +\n              this.state.active.substring(1,this.state.active.length)\n            }</div>\n            <div id=\"time-left\">{this.state.time}</div>\n            <div className=\"Knappar\">\n              <button id=\"start_stop\" onClick={this.start_stop}> Start </button>\n              <button id=\"pause\" onClick={this.pause}> Pause </button>\n              <button id=\"reset\" onClick={this.reset} > Reset </button>\n            </div>\n            <code>drGeo</code>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}